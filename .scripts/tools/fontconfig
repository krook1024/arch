#!/usr/bin/env bash

question() { # Displays a question that the user can respond to with either y or n
	# Usage: question "question"
	echo -n "$1 (y/n)? "
	read -r answer
	if [ "$answer" != "${answer#[Yy]}" ] ;then
		return 0
	else
		return 1
	fi
}

deleteCurrentConfig() { # Deletes the current configuration
	echo "> Deleting current fontconfig..."
	sudo rm -rf -- /etc/fonts/conf.d/*
}

installFontPkg() { # Installs needed packages
	echo "> Installing packages from Arch repos and AUR..."
	yay -S --noconfirm --needed noto-fonts noto-fonts-emoji \
		noto-fonts-cjk ttf-symbola ttf-roboto ttf-dejavu \
		>/dev/null 2>&1

	getNerdFont "Overpass" || echo ">> Failed to install Overpass"
	# getNerdFont "<++>" || echo ">> Failed to install <++>"
}

deleteNerdFonts() {
	echo "> Deleting all Nerd Fonts..."
	sudo rm -rf -- /usr/share/fonts/TTF/*Nerd\ Font*.ttf
	sudo rm -rf -- /usr/share/fonts/TTF/Sauce\ Code Pro*.ttf
	sudo rm -rf -- /usr/share/fonts/TTF/FuraCode*.ttf
	sudo rm -rf -- /usr/share/fonts/TTF/Meslo*.otf
}

getNerdFont() { # Downloads and installs a nerd font given a name
	name=$1
	echo "> Getting $1 (nerd font)..."
	dir=$(mktemp -d) && cd "$dir" || return
	echo "> Temporary directory created: $dir"
	echo "> Downloading $name..."
	local url="https://github.com/ryanoasis/nerd-fonts/releases/download/v2.0.0"
	curl -fLo "tmp.zip" "$url/$name.zip" -# && unset url
	[[ ! -f tmp.zip ]] && {
		echo "Failed to download $name!"
		return 1
	}
	echo "> Extracting archive..."
	unzip -d . "tmp.zip" >/dev/null 2>&1
	rm -f -- *Compatible.ttf
	rm -f -- *Compatible.otf
	rm -f -- *Mono.ttf
	rm -f -- *Mono.otf
	rm -f -- *.zip
	echo "> Installing these font files for $name:"
	ls -- *.ttf
	ls -- *.otf
	sudo mv -f ./*.ttf /usr/share/fonts/TTF/
	sudo mv -f ./*.otf /usr/share/fonts/OTF/
	(:;:)
	echo "> Done! Cleaning up now..."
	rm -rf "$dir"
	unset dir
}

installNewConfig() { # Symlinks configuration files to /etc/fonts/conf.d
	needed_cfg=(10-hinting-slight.conf \
		10-scale-bitmap-fonts.conf 10-sub-pixel-rgb.conf \
		11-lcdfilter-default.conf \
		30-metric-aliases.conf \
		50-user.conf 60-generic.conf \
		57-dejavu-sans.conf 57-dejavu-serif.conf \
		60-generic.conf \
		# 66-noto-sans.conf 66-noto-serif.conf \
		90-synthetic.conf)

	for i in "${needed_cfg[@]}"; do
		sudo ln -s "/etc/fonts/conf.avail/$i" "/etc/fonts/conf.d/"
	done
}

main() {
	question "Delete current fontconfig?" && deleteCurrentConfig
	question "Delete all Nerd Fonts?" && deleteNerdFonts

	question "Install font packages" && {
		installFontPkg || echo "Failed to install \
		font packages!"
	}

	echo "Installing new font configuration..."
	installNewConfig || echo "Failed to install \
		new font configuration!"

	echo "Refresing font cache..."
		sudo fc-cache -fv >/dev/null 2>&1 || "Failed to refresh \
			font cache!"
}

main || echo "Failed." && exit 1
